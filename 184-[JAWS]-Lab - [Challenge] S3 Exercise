184-[JAWS]-Lab - [Challenge] S3 Exercise
Working with Amazon S3 - Lab Guide
Lab Overview
In this lab, you will create and configure an Amazon Simple Storage Service (Amazon S3) bucket to share images with an external user (mediacouser) from a media company hired to provide product pictures for a cafe. The S3 bucket will also serve as an internal storage location for the application managing the bucket and media. The lab includes setting up AWS CLI, creating an S3 bucket, configuring IAM permissions, and setting up event notifications using Amazon SNS.
Architecture
The solution involves:

An IAM user (mediacouser) with permissions to add, update, or delete images in the S3 bucket.
An Amazon S3 bucket for storing images.
An Amazon SNS topic (S3NotificationTopic) to send email notifications when bucket contents change.
An AWS CLI setup on an EC2 instance to perform configurations.

Usage Flow

A media company representative signs in as mediacouser via the AWS Management Console or AWS CLI to update images in the S3 bucket.
Amazon S3 detects changes (e.g., object creation or deletion) and publishes a notification to the S3NotificationTopic SNS topic.
The administrator subscribed to the SNS topic receives an email notification with details of the change.

Task 1: Connecting to the CLI Host EC2 Instance and Configuring the AWS CLI
Task 1.1: Connecting to the CLI Host EC2 Instance

In the AWS Management Console, search for EC2 and open the EC2 Management Console.
In the navigation pane, choose Instances.
Select the CLI Host instance from the list.
Click Connect.
On the EC2 Instance Connect tab, click Connect to open a terminal window in a new browser tab.
Use this terminal to complete the tasks. If the terminal becomes unresponsive, refresh the browser or reconnect.

Task 1.2: Configuring the AWS CLI

In the EC2 Instance Connect terminal, run:aws configure


Enter the following values at the prompts:
AWS Access Key ID: Paste the provided Accesskey.
AWS Secret Access Key: Paste the provided Secretkey.
Default region name: Enter us-east-2 (replace with the appropriate region if different).
Default output format: Press Enter to accept the default (e.g., json).



Task 2: Creating and Initializing the S3 Share Bucket

Create an S3 bucket using the AWS CLI. Replace <bucket-name> with a unique name starting with s3e- (e.g., s3e-cafe-images-123):
aws s3 mb s3://s3e-<bucket-name> --region <region>


Ensure the bucket name is lowercase and unique. You should see a confirmation message like:make_bucket: s3e-<bucket-name>




Upload sample images from the initial-image folder on the CLI Host to the images prefix in the S3 bucket. For example:
aws s3 cp initial-image/<image-name>.jpg s3://s3e-<bucket-name>/images/<image-name>.jpg


Create an HTML file to display an image from the bucket:
<html>
  <body>
    <img src="s3://s3e-<bucket-name>/images/<image-name>.jpg" alt="image">
  </body>
</html>

Save this as index.html and upload it to the bucket:
aws s3 cp index.html s3://s3e-<bucket-name>/index.html


Verify the uploaded files:
aws s3 ls s3://s3e-<bucket-name>/images/

This lists the files and their details (e.g., size).


Task 3: Reviewing IAM Group and User Permissions
Task 3.1: Reviewing the mediaco IAM Group

In the AWS Management Console, navigate to IAM > Groups.

Select the mediaco group.

Review the attached policy, which grants:

Read and write access to the S3 bucket’s images folder.
Permissions to list buckets and objects in the console.
Specific actions restricted to the images/ prefix.

The policy includes:

AllowGroupToSetBucketListInTheConsole: Allows listing S3 buckets in the console.
AllowRootLevelListOfTheBuckets: Allows listing objects in the bucket.
AllowUserSpecificActionOnlyInTheSpecificPrefix: Restricts actions (e.g., PutObject, GetObject, DeleteObject) to the images/ prefix.



Task 3.2: Reviewing the mediacouser IAM User

In the IAM console, navigate to Users and select mediacouser.
On the Permissions tab, confirm the user inherits policies from the mediaco group (IAMUserChangePassword and mediaPolicy).
On the Security credentials tab, create an access key:
Select Command Line Interface (CLI).
Acknowledge the recommendation and create the key.
Download the access key file and save it securely.


Copy the Console sign-in link for use in the next task.

Task 3.3: Testing Permissions

Sign in to the AWS Management Console as mediacouser using the console sign-in link.
Test authorized actions:
Navigate to S3 > your bucket > images/ folder.
Upload an image (e.g., Caramel Delight.jpg).
Delete an image (e.g., strawberry-tarts.jpg).
Verify the actions succeed.


Test an unauthorized action:
Attempt to change bucket permissions or upload to the root of the bucket.
Confirm an error like Insufficient permissions or Access Denied.



Task 4: Configuring Event Notifications on the S3 Share Bucket
Task 4.1: Creating and Configuring the S3NotificationTopic SNS Topic

In the AWS Management Console, search for Simple Notification Service and open the SNS console.
Navigate to Topics and click Create topic.
Select Standard type, name it S3NotificationTopic, and create the topic.
Copy the topic’s ARN to a text editor.
Edit the topic’s access policy:
Expand the Access policy section.
Replace the JSON with the following, substituting <S3NotificationTopic-ARN> and <bucket-name>:{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "s3.amazonaws.com"
      },
      "Action": "SNS:Publish",
      "Resource": "<S3NotificationTopic-ARN>",
      "Condition": {
        "ArnLike": {
          "aws:SourceArn": "arn:aws:s3:*:*:s3e-<bucket-name>"
        }
      }
    }
  ]
}




Save the changes.
Subscribe to the topic:
Go to the Subscriptions tab.
Select the S3NotificationTopic ARN.
Choose Email as the protocol and enter an accessible email address.
Create the subscription.
Check the email inbox and confirm the subscription via the link in the SNS confirmation email.



Task 4.2: Adding an Event Notification Configuration to the S3 Bucket

Create a JSON file (e.g., s3bucket1Test1.json) with the following configuration:
{
  "TopicConfigurations": [
    {
      "TopicArn": "<S3NotificationTopic-ARN>",
      "Events": ["s3:ObjectCreated:*", "s3:ObjectRemoved:*"],
      "Filter": {
        "Key": {
          "FilterRules": [
            {
              "Name": "prefix",
              "Value": "images/"
            }
          ]
        }
      }
    }
  ]
}


Save the file on the CLI Host.

Associate the configuration with the S3 bucket:
aws s3api put-bucket-notification-configuration --bucket s3e-<bucket-name> --notification-configuration file://s3bucket1Test1.json


Test the notification:

Upload an image to the images/ folder:aws s3 cp <image-file>.jpg s3://s3e-<bucket-name>/images/<image-file>.jpg


Check the subscribed email for a notification with eventName: ObjectCreated.Put and the object key (e.g., images/Caramel Delight.jpg).
Delete an image:aws s3api delete-object --bucket s3e-<bucket-name> --key images/strawberry-tarts.jpg


Check for a notification with eventName: ObjectRemoved.Delete and the object key.
Attempt an unauthorized action (e.g., setting public-read ACL):aws s3api put-object --bucket s3e-<bucket-name> --key images/Donuts.jpg --acl public-read

Confirm the command fails with Access Denied.



Conclusion
You have successfully:

Used AWS CLI to create and configure an S3 bucket.
Verified write permissions for the mediacouser user.
Configured SNS event notifications for the S3 bucket.

To end the lab:

Choose End Lab at the top of the AWS Management Console.
Confirm by selecting Yes.
Close the End Lab panel when resources are terminated.
